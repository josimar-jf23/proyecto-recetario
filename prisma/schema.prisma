// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}


model User {
  id        Int     @id @default(autoincrement())
  code      String  @unique
  email     String  @unique
  name      String  @db.VarChar(50)
  password  String
  token     String?
  roleId    Int?
  role      Role?    @relation(fields: [roleId], references: [id])  
  recipes   Recipe[]
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
  @@map("users")
}

model MenuOption {
  id        Int          @id @default(autoincrement())
  name      String
  type      String
  permisos  RolePermission[]
}
model Role {
  id          Int      @id @default(autoincrement())
  name        String   @unique
  code        String   @unique
  users       User[]
  rol_permiso RolePermission[]
  @@map("roles")
}

model Permission {
  id     Int      @id @default(autoincrement())
  name   String   @unique
  code        String   @unique
  descripcion String?
  rol_permiso RolePermission[]
  @@map("permissions")
}

model RolePermission {
  id           Int        @id @default(autoincrement())
  rolId        Int
  menuOptionId Int
  permissionId    Int
  role         Role       @relation(fields: [rolId], references: [id])
  menuOption   MenuOption @relation(fields: [menuOptionId], references: [id])
  permiso      Permission    @relation(fields: [permissionId], references: [id])

  @@unique([rolId, menuOptionId, permissionId])
	@@map("roles_permissions")
}

model UnitMeasure {
  id    Int     @id @default(autoincrement())
  name  String  @unique @db.VarChar(100)
  short String  @db.VarChar(20)
  code        String   @unique
  @@map("units_measure")
}

model Category {
  id    Int     @id @default(autoincrement())
  code        String   @unique
  name  String  @unique @db.VarChar(200)
  description String? 
  @@map("categories")
}

model Recipe{
  id Int @id @default(autoincrement())
  code        String   @unique
  name String @db.VarChar(250)
  description String?
  preparation_time Decimal @db.Decimal(9,2)
  user User @relation(fields: [UserId],references: [id])
  UserId Int
  recipe_steps RecipeStep[]
  recipe_ingredients RecipeIngredient[]  
  @@map("recipes")
}

model RecipeStep{
  id Int @id @default(autoincrement())  
  code        String   @unique
  step String 
  order Int @default(0)
  recipe Recipe @relation(fields: [RecipeId],references: [id])
  RecipeId Int
  @@map("recipe_steps")
}

model RecipeIngredient{
  id Int @id @default(autoincrement())
  code        String   @unique  
  ingredient String
  amount Decimal @db.Decimal(9,2)
  order Int @default(0)
  recipe Recipe @relation(fields: [RecipeId],references: [id])
  RecipeId Int
  @@map("recipe_ingredients")
}

